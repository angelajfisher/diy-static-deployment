name: Deploy Frontend

on:
  push:
    branches: ['main']

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    outputs:
      artifact-id: ${{ steps.artifact-upload.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            frontend
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
        env:
          VITE_TEST: ${{ secrets.VITE_TEST }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload
        with:
          name: frontend-artifact
          path: './frontend/dist'
          if-no-files-found: error
          retention-days: 1
  # release:
  #   needs: build-frontend
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Create release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #       id: create_release
  #       with:
  #         draft: false
  #         prerelease: false
  #         release_name: ${{ steps.my-artifact.outputs.artifact-id }}
  #         tag_name: test-release
  #     - name: Upload release
  #       uses: actions/upload-release-asset@v1.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./my-artifact.zip
  #         asset_name: my-artifact.zip
  #         asset_content_type: application/zip
  #     - name: Publish Release
  #       uses: eregon/publish-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #       with:
  #         release_id: ${{ steps.create_release.outputs.id }}
  ping-server:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Invoke Webhook
        uses: johannes-huther/webhook.sh@v1
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{"artifact-id": "${{ needs.build-frontend.outputs.artifact-id }}", "needs-parity": true}'
